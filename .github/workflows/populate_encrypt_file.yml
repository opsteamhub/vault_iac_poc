name: 'Terraform'

# on:
#   push:
#     branches: [ "main" ]
#   pull_request:
on:
  workflow_dispatch:
    inputs:
      secret_content:
        description: 'Secret Content'
        required: true
        type: string

permissions:
  contents: read

jobs:
  terraform:
    name: 'Terraform'
    runs-on: ubuntu-latest
    environment: production

    # Use the Bash shell regardless whether the GitHub Actions runner is ubuntu-latest, macos-latest, or windows-latest
    defaults:
      run:
        shell: bash
        working-directory: modules/pgp-provider-encrypt/

    steps:
    # Checkout the repository to the GitHub Actions runner
    - name: Checkout
      uses: actions/checkout@v3

    # Install the latest version of Terraform CLI and configure the Terraform CLI configuration.
    - name: Install Terraform
      run: |
        wget -O- https://apt.releases.hashicorp.com/gpg | gpg --dearmor | sudo tee /usr/share/keyrings/hashicorp-archive-keyring.gpg
        echo "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com $(lsb_release -cs) main" | sudo tee /etc/apt/sources.list.d/hashicorp.list
        sudo apt update && sudo apt install terraform
    - name: Terraform Version
      run: terraform --version
    - name: Where am I
      run: pwd
    - name: List Files
      run: ls -la
    - name: Print Secret Content File
      run: "echo  The Secret Content is: ${{ inputs.secret_content}}"
    - name: Terraform Init
      run: |
        terraform init -input=false
    - name: Where am I
      run: pwd
    # Generates an execution plan for Terraform
    - name: Terraform Plan
      env:
        SECRET_CONTENT: ${{ inputs.secret_content }}
        PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      run: |
        export TF_VAR_filename=$SECRET_CONTENT && \
        export TF_VAR_public_key=$PUBLIC_KEY && \
        export TF_VAR_filename_output="output.txt" && \
        terraform plan -input=false
    - name: Terraform Apply
      env:
        SECRET_CONTENT: ${{ inputs.secret_content }}
        PUBLIC_KEY: ${{ secrets.PUBLIC_KEY }}
      run: |
        export TF_VAR_filename=$SECRET_CONTENT && \
        export TF_VAR_public_key=$PUBLIC_KEY && \
        export TF_VAR_filename_output="output.txt" && \
        terraform apply -auto-approve -input=false
